

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Nov 12 21:43:44 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Generated 17/10/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4550 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000FE0                     bsr             equ	4064
    58   000FE9                     fsr0            equ	4073
    59   000FEA                     fsr0h           equ	4074
    60   000FE9                     fsr0l           equ	4073
    61   000FE1                     fsr1            equ	4065
    62   000FE2                     fsr1h           equ	4066
    63   000FE1                     fsr1l           equ	4065
    64   000FD9                     fsr2            equ	4057
    65   000FDA                     fsr2h           equ	4058
    66   000FD9                     fsr2l           equ	4057
    67   000FEF                     indf0           equ	4079
    68   000FE7                     indf1           equ	4071
    69   000FDF                     indf2           equ	4063
    70   000FF2                     intcon          equ	4082
    71   000000                     nvmcon          equ	0
    72   000FF9                     pcl             equ	4089
    73   000FFA                     pclath          equ	4090
    74   000FFB                     pclatu          equ	4091
    75   000FEB                     plusw0          equ	4075
    76   000FE3                     plusw1          equ	4067
    77   000FDB                     plusw2          equ	4059
    78   000FED                     postdec0        equ	4077
    79   000FE5                     postdec1        equ	4069
    80   000FDD                     postdec2        equ	4061
    81   000FEE                     postinc0        equ	4078
    82   000FE6                     postinc1        equ	4070
    83   000FDE                     postinc2        equ	4062
    84   000FEC                     preinc0         equ	4076
    85   000FE4                     preinc1         equ	4068
    86   000FDC                     preinc2         equ	4060
    87   000FF3                     prod            equ	4083
    88   000FF4                     prodh           equ	4084
    89   000FF3                     prodl           equ	4083
    90   000FD8                     status          equ	4056
    91   000FF5                     tablat          equ	4085
    92   000FF6                     tblptr          equ	4086
    93   000FF7                     tblptrh         equ	4087
    94   000FF6                     tblptrl         equ	4086
    95   000FF8                     tblptru         equ	4088
    96   000FFD                     tosl            equ	4093
    97   000FE8                     wreg            equ	4072
    98   000F62                     SPPDATA         equ	3938	;# 
    99   000F63                     SPPCFG          equ	3939	;# 
   100   000F64                     SPPEPS          equ	3940	;# 
   101   000F65                     SPPCON          equ	3941	;# 
   102   000F66                     UFRM            equ	3942	;# 
   103   000F66                     UFRML           equ	3942	;# 
   104   000F67                     UFRMH           equ	3943	;# 
   105   000F68                     UIR             equ	3944	;# 
   106   000F69                     UIE             equ	3945	;# 
   107   000F6A                     UEIR            equ	3946	;# 
   108   000F6B                     UEIE            equ	3947	;# 
   109   000F6C                     USTAT           equ	3948	;# 
   110   000F6D                     UCON            equ	3949	;# 
   111   000F6E                     UADDR           equ	3950	;# 
   112   000F6F                     UCFG            equ	3951	;# 
   113   000F70                     UEP0            equ	3952	;# 
   114   000F71                     UEP1            equ	3953	;# 
   115   000F72                     UEP2            equ	3954	;# 
   116   000F73                     UEP3            equ	3955	;# 
   117   000F74                     UEP4            equ	3956	;# 
   118   000F75                     UEP5            equ	3957	;# 
   119   000F76                     UEP6            equ	3958	;# 
   120   000F77                     UEP7            equ	3959	;# 
   121   000F78                     UEP8            equ	3960	;# 
   122   000F79                     UEP9            equ	3961	;# 
   123   000F7A                     UEP10           equ	3962	;# 
   124   000F7B                     UEP11           equ	3963	;# 
   125   000F7C                     UEP12           equ	3964	;# 
   126   000F7D                     UEP13           equ	3965	;# 
   127   000F7E                     UEP14           equ	3966	;# 
   128   000F7F                     UEP15           equ	3967	;# 
   129   000F80                     PORTA           equ	3968	;# 
   130   000F81                     PORTB           equ	3969	;# 
   131   000F82                     PORTC           equ	3970	;# 
   132   000F83                     PORTD           equ	3971	;# 
   133   000F84                     PORTE           equ	3972	;# 
   134   000F89                     LATA            equ	3977	;# 
   135   000F8A                     LATB            equ	3978	;# 
   136   000F8B                     LATC            equ	3979	;# 
   137   000F8C                     LATD            equ	3980	;# 
   138   000F8D                     LATE            equ	3981	;# 
   139   000F92                     TRISA           equ	3986	;# 
   140   000F92                     DDRA            equ	3986	;# 
   141   000F93                     TRISB           equ	3987	;# 
   142   000F93                     DDRB            equ	3987	;# 
   143   000F94                     TRISC           equ	3988	;# 
   144   000F94                     DDRC            equ	3988	;# 
   145   000F95                     TRISD           equ	3989	;# 
   146   000F95                     DDRD            equ	3989	;# 
   147   000F96                     TRISE           equ	3990	;# 
   148   000F96                     DDRE            equ	3990	;# 
   149   000F9B                     OSCTUNE         equ	3995	;# 
   150   000F9D                     PIE1            equ	3997	;# 
   151   000F9E                     PIR1            equ	3998	;# 
   152   000F9F                     IPR1            equ	3999	;# 
   153   000FA0                     PIE2            equ	4000	;# 
   154   000FA1                     PIR2            equ	4001	;# 
   155   000FA2                     IPR2            equ	4002	;# 
   156   000FA6                     EECON1          equ	4006	;# 
   157   000FA7                     EECON2          equ	4007	;# 
   158   000FA8                     EEDATA          equ	4008	;# 
   159   000FA9                     EEADR           equ	4009	;# 
   160   000FAB                     RCSTA           equ	4011	;# 
   161   000FAB                     RCSTA1          equ	4011	;# 
   162   000FAC                     TXSTA           equ	4012	;# 
   163   000FAC                     TXSTA1          equ	4012	;# 
   164   000FAD                     TXREG           equ	4013	;# 
   165   000FAD                     TXREG1          equ	4013	;# 
   166   000FAE                     RCREG           equ	4014	;# 
   167   000FAE                     RCREG1          equ	4014	;# 
   168   000FAF                     SPBRG           equ	4015	;# 
   169   000FAF                     SPBRG1          equ	4015	;# 
   170   000FB0                     SPBRGH          equ	4016	;# 
   171   000FB1                     T3CON           equ	4017	;# 
   172   000FB2                     TMR3            equ	4018	;# 
   173   000FB2                     TMR3L           equ	4018	;# 
   174   000FB3                     TMR3H           equ	4019	;# 
   175   000FB4                     CMCON           equ	4020	;# 
   176   000FB5                     CVRCON          equ	4021	;# 
   177   000FB6                     ECCP1AS         equ	4022	;# 
   178   000FB6                     CCP1AS          equ	4022	;# 
   179   000FB7                     ECCP1DEL        equ	4023	;# 
   180   000FB7                     CCP1DEL         equ	4023	;# 
   181   000FB8                     BAUDCON         equ	4024	;# 
   182   000FB8                     BAUDCTL         equ	4024	;# 
   183   000FBA                     CCP2CON         equ	4026	;# 
   184   000FBB                     CCPR2           equ	4027	;# 
   185   000FBB                     CCPR2L          equ	4027	;# 
   186   000FBC                     CCPR2H          equ	4028	;# 
   187   000FBD                     CCP1CON         equ	4029	;# 
   188   000FBD                     ECCP1CON        equ	4029	;# 
   189   000FBE                     CCPR1           equ	4030	;# 
   190   000FBE                     CCPR1L          equ	4030	;# 
   191   000FBF                     CCPR1H          equ	4031	;# 
   192   000FC0                     ADCON2          equ	4032	;# 
   193   000FC1                     ADCON1          equ	4033	;# 
   194   000FC2                     ADCON0          equ	4034	;# 
   195   000FC3                     ADRES           equ	4035	;# 
   196   000FC3                     ADRESL          equ	4035	;# 
   197   000FC4                     ADRESH          equ	4036	;# 
   198   000FC5                     SSPCON2         equ	4037	;# 
   199   000FC6                     SSPCON1         equ	4038	;# 
   200   000FC7                     SSPSTAT         equ	4039	;# 
   201   000FC8                     SSPADD          equ	4040	;# 
   202   000FC9                     SSPBUF          equ	4041	;# 
   203   000FCA                     T2CON           equ	4042	;# 
   204   000FCB                     PR2             equ	4043	;# 
   205   000FCB                     MEMCON          equ	4043	;# 
   206   000FCC                     TMR2            equ	4044	;# 
   207   000FCD                     T1CON           equ	4045	;# 
   208   000FCE                     TMR1            equ	4046	;# 
   209   000FCE                     TMR1L           equ	4046	;# 
   210   000FCF                     TMR1H           equ	4047	;# 
   211   000FD0                     RCON            equ	4048	;# 
   212   000FD1                     WDTCON          equ	4049	;# 
   213   000FD2                     HLVDCON         equ	4050	;# 
   214   000FD2                     LVDCON          equ	4050	;# 
   215   000FD3                     OSCCON          equ	4051	;# 
   216   000FD5                     T0CON           equ	4053	;# 
   217   000FD6                     TMR0            equ	4054	;# 
   218   000FD6                     TMR0L           equ	4054	;# 
   219   000FD7                     TMR0H           equ	4055	;# 
   220   000FD8                     STATUS          equ	4056	;# 
   221   000FD9                     FSR2            equ	4057	;# 
   222   000FD9                     FSR2L           equ	4057	;# 
   223   000FDA                     FSR2H           equ	4058	;# 
   224   000FDB                     PLUSW2          equ	4059	;# 
   225   000FDC                     PREINC2         equ	4060	;# 
   226   000FDD                     POSTDEC2        equ	4061	;# 
   227   000FDE                     POSTINC2        equ	4062	;# 
   228   000FDF                     INDF2           equ	4063	;# 
   229   000FE0                     BSR             equ	4064	;# 
   230   000FE1                     FSR1            equ	4065	;# 
   231   000FE1                     FSR1L           equ	4065	;# 
   232   000FE2                     FSR1H           equ	4066	;# 
   233   000FE3                     PLUSW1          equ	4067	;# 
   234   000FE4                     PREINC1         equ	4068	;# 
   235   000FE5                     POSTDEC1        equ	4069	;# 
   236   000FE6                     POSTINC1        equ	4070	;# 
   237   000FE7                     INDF1           equ	4071	;# 
   238   000FE8                     WREG            equ	4072	;# 
   239   000FE9                     FSR0            equ	4073	;# 
   240   000FE9                     FSR0L           equ	4073	;# 
   241   000FEA                     FSR0H           equ	4074	;# 
   242   000FEB                     PLUSW0          equ	4075	;# 
   243   000FEC                     PREINC0         equ	4076	;# 
   244   000FED                     POSTDEC0        equ	4077	;# 
   245   000FEE                     POSTINC0        equ	4078	;# 
   246   000FEF                     INDF0           equ	4079	;# 
   247   000FF0                     INTCON3         equ	4080	;# 
   248   000FF1                     INTCON2         equ	4081	;# 
   249   000FF2                     INTCON          equ	4082	;# 
   250   000FF3                     PROD            equ	4083	;# 
   251   000FF3                     PRODL           equ	4083	;# 
   252   000FF4                     PRODH           equ	4084	;# 
   253   000FF5                     TABLAT          equ	4085	;# 
   254   000FF6                     TBLPTR          equ	4086	;# 
   255   000FF6                     TBLPTRL         equ	4086	;# 
   256   000FF7                     TBLPTRH         equ	4087	;# 
   257   000FF8                     TBLPTRU         equ	4088	;# 
   258   000FF9                     PCLAT           equ	4089	;# 
   259   000FF9                     PC              equ	4089	;# 
   260   000FF9                     PCL             equ	4089	;# 
   261   000FFA                     PCLATH          equ	4090	;# 
   262   000FFB                     PCLATU          equ	4091	;# 
   263   000FFC                     STKPTR          equ	4092	;# 
   264   000FFD                     TOS             equ	4093	;# 
   265   000FFD                     TOSL            equ	4093	;# 
   266   000FFE                     TOSH            equ	4094	;# 
   267   000FFF                     TOSU            equ	4095	;# 
   268   000F62                     SPPDATA         equ	3938	;# 
   269   000F63                     SPPCFG          equ	3939	;# 
   270   000F64                     SPPEPS          equ	3940	;# 
   271   000F65                     SPPCON          equ	3941	;# 
   272   000F66                     UFRM            equ	3942	;# 
   273   000F66                     UFRML           equ	3942	;# 
   274   000F67                     UFRMH           equ	3943	;# 
   275   000F68                     UIR             equ	3944	;# 
   276   000F69                     UIE             equ	3945	;# 
   277   000F6A                     UEIR            equ	3946	;# 
   278   000F6B                     UEIE            equ	3947	;# 
   279   000F6C                     USTAT           equ	3948	;# 
   280   000F6D                     UCON            equ	3949	;# 
   281   000F6E                     UADDR           equ	3950	;# 
   282   000F6F                     UCFG            equ	3951	;# 
   283   000F70                     UEP0            equ	3952	;# 
   284   000F71                     UEP1            equ	3953	;# 
   285   000F72                     UEP2            equ	3954	;# 
   286   000F73                     UEP3            equ	3955	;# 
   287   000F74                     UEP4            equ	3956	;# 
   288   000F75                     UEP5            equ	3957	;# 
   289   000F76                     UEP6            equ	3958	;# 
   290   000F77                     UEP7            equ	3959	;# 
   291   000F78                     UEP8            equ	3960	;# 
   292   000F79                     UEP9            equ	3961	;# 
   293   000F7A                     UEP10           equ	3962	;# 
   294   000F7B                     UEP11           equ	3963	;# 
   295   000F7C                     UEP12           equ	3964	;# 
   296   000F7D                     UEP13           equ	3965	;# 
   297   000F7E                     UEP14           equ	3966	;# 
   298   000F7F                     UEP15           equ	3967	;# 
   299   000F80                     PORTA           equ	3968	;# 
   300   000F81                     PORTB           equ	3969	;# 
   301   000F82                     PORTC           equ	3970	;# 
   302   000F83                     PORTD           equ	3971	;# 
   303   000F84                     PORTE           equ	3972	;# 
   304   000F89                     LATA            equ	3977	;# 
   305   000F8A                     LATB            equ	3978	;# 
   306   000F8B                     LATC            equ	3979	;# 
   307   000F8C                     LATD            equ	3980	;# 
   308   000F8D                     LATE            equ	3981	;# 
   309   000F92                     TRISA           equ	3986	;# 
   310   000F92                     DDRA            equ	3986	;# 
   311   000F93                     TRISB           equ	3987	;# 
   312   000F93                     DDRB            equ	3987	;# 
   313   000F94                     TRISC           equ	3988	;# 
   314   000F94                     DDRC            equ	3988	;# 
   315   000F95                     TRISD           equ	3989	;# 
   316   000F95                     DDRD            equ	3989	;# 
   317   000F96                     TRISE           equ	3990	;# 
   318   000F96                     DDRE            equ	3990	;# 
   319   000F9B                     OSCTUNE         equ	3995	;# 
   320   000F9D                     PIE1            equ	3997	;# 
   321   000F9E                     PIR1            equ	3998	;# 
   322   000F9F                     IPR1            equ	3999	;# 
   323   000FA0                     PIE2            equ	4000	;# 
   324   000FA1                     PIR2            equ	4001	;# 
   325   000FA2                     IPR2            equ	4002	;# 
   326   000FA6                     EECON1          equ	4006	;# 
   327   000FA7                     EECON2          equ	4007	;# 
   328   000FA8                     EEDATA          equ	4008	;# 
   329   000FA9                     EEADR           equ	4009	;# 
   330   000FAB                     RCSTA           equ	4011	;# 
   331   000FAB                     RCSTA1          equ	4011	;# 
   332   000FAC                     TXSTA           equ	4012	;# 
   333   000FAC                     TXSTA1          equ	4012	;# 
   334   000FAD                     TXREG           equ	4013	;# 
   335   000FAD                     TXREG1          equ	4013	;# 
   336   000FAE                     RCREG           equ	4014	;# 
   337   000FAE                     RCREG1          equ	4014	;# 
   338   000FAF                     SPBRG           equ	4015	;# 
   339   000FAF                     SPBRG1          equ	4015	;# 
   340   000FB0                     SPBRGH          equ	4016	;# 
   341   000FB1                     T3CON           equ	4017	;# 
   342   000FB2                     TMR3            equ	4018	;# 
   343   000FB2                     TMR3L           equ	4018	;# 
   344   000FB3                     TMR3H           equ	4019	;# 
   345   000FB4                     CMCON           equ	4020	;# 
   346   000FB5                     CVRCON          equ	4021	;# 
   347   000FB6                     ECCP1AS         equ	4022	;# 
   348   000FB6                     CCP1AS          equ	4022	;# 
   349   000FB7                     ECCP1DEL        equ	4023	;# 
   350   000FB7                     CCP1DEL         equ	4023	;# 
   351   000FB8                     BAUDCON         equ	4024	;# 
   352   000FB8                     BAUDCTL         equ	4024	;# 
   353   000FBA                     CCP2CON         equ	4026	;# 
   354   000FBB                     CCPR2           equ	4027	;# 
   355   000FBB                     CCPR2L          equ	4027	;# 
   356   000FBC                     CCPR2H          equ	4028	;# 
   357   000FBD                     CCP1CON         equ	4029	;# 
   358   000FBD                     ECCP1CON        equ	4029	;# 
   359   000FBE                     CCPR1           equ	4030	;# 
   360   000FBE                     CCPR1L          equ	4030	;# 
   361   000FBF                     CCPR1H          equ	4031	;# 
   362   000FC0                     ADCON2          equ	4032	;# 
   363   000FC1                     ADCON1          equ	4033	;# 
   364   000FC2                     ADCON0          equ	4034	;# 
   365   000FC3                     ADRES           equ	4035	;# 
   366   000FC3                     ADRESL          equ	4035	;# 
   367   000FC4                     ADRESH          equ	4036	;# 
   368   000FC5                     SSPCON2         equ	4037	;# 
   369   000FC6                     SSPCON1         equ	4038	;# 
   370   000FC7                     SSPSTAT         equ	4039	;# 
   371   000FC8                     SSPADD          equ	4040	;# 
   372   000FC9                     SSPBUF          equ	4041	;# 
   373   000FCA                     T2CON           equ	4042	;# 
   374   000FCB                     PR2             equ	4043	;# 
   375   000FCB                     MEMCON          equ	4043	;# 
   376   000FCC                     TMR2            equ	4044	;# 
   377   000FCD                     T1CON           equ	4045	;# 
   378   000FCE                     TMR1            equ	4046	;# 
   379   000FCE                     TMR1L           equ	4046	;# 
   380   000FCF                     TMR1H           equ	4047	;# 
   381   000FD0                     RCON            equ	4048	;# 
   382   000FD1                     WDTCON          equ	4049	;# 
   383   000FD2                     HLVDCON         equ	4050	;# 
   384   000FD2                     LVDCON          equ	4050	;# 
   385   000FD3                     OSCCON          equ	4051	;# 
   386   000FD5                     T0CON           equ	4053	;# 
   387   000FD6                     TMR0            equ	4054	;# 
   388   000FD6                     TMR0L           equ	4054	;# 
   389   000FD7                     TMR0H           equ	4055	;# 
   390   000FD8                     STATUS          equ	4056	;# 
   391   000FD9                     FSR2            equ	4057	;# 
   392   000FD9                     FSR2L           equ	4057	;# 
   393   000FDA                     FSR2H           equ	4058	;# 
   394   000FDB                     PLUSW2          equ	4059	;# 
   395   000FDC                     PREINC2         equ	4060	;# 
   396   000FDD                     POSTDEC2        equ	4061	;# 
   397   000FDE                     POSTINC2        equ	4062	;# 
   398   000FDF                     INDF2           equ	4063	;# 
   399   000FE0                     BSR             equ	4064	;# 
   400   000FE1                     FSR1            equ	4065	;# 
   401   000FE1                     FSR1L           equ	4065	;# 
   402   000FE2                     FSR1H           equ	4066	;# 
   403   000FE3                     PLUSW1          equ	4067	;# 
   404   000FE4                     PREINC1         equ	4068	;# 
   405   000FE5                     POSTDEC1        equ	4069	;# 
   406   000FE6                     POSTINC1        equ	4070	;# 
   407   000FE7                     INDF1           equ	4071	;# 
   408   000FE8                     WREG            equ	4072	;# 
   409   000FE9                     FSR0            equ	4073	;# 
   410   000FE9                     FSR0L           equ	4073	;# 
   411   000FEA                     FSR0H           equ	4074	;# 
   412   000FEB                     PLUSW0          equ	4075	;# 
   413   000FEC                     PREINC0         equ	4076	;# 
   414   000FED                     POSTDEC0        equ	4077	;# 
   415   000FEE                     POSTINC0        equ	4078	;# 
   416   000FEF                     INDF0           equ	4079	;# 
   417   000FF0                     INTCON3         equ	4080	;# 
   418   000FF1                     INTCON2         equ	4081	;# 
   419   000FF2                     INTCON          equ	4082	;# 
   420   000FF3                     PROD            equ	4083	;# 
   421   000FF3                     PRODL           equ	4083	;# 
   422   000FF4                     PRODH           equ	4084	;# 
   423   000FF5                     TABLAT          equ	4085	;# 
   424   000FF6                     TBLPTR          equ	4086	;# 
   425   000FF6                     TBLPTRL         equ	4086	;# 
   426   000FF7                     TBLPTRH         equ	4087	;# 
   427   000FF8                     TBLPTRU         equ	4088	;# 
   428   000FF9                     PCLAT           equ	4089	;# 
   429   000FF9                     PC              equ	4089	;# 
   430   000FF9                     PCL             equ	4089	;# 
   431   000FFA                     PCLATH          equ	4090	;# 
   432   000FFB                     PCLATU          equ	4091	;# 
   433   000FFC                     STKPTR          equ	4092	;# 
   434   000FFD                     TOS             equ	4093	;# 
   435   000FFD                     TOSL            equ	4093	;# 
   436   000FFE                     TOSH            equ	4094	;# 
   437   000FFF                     TOSU            equ	4095	;# 
   438   000F62                     SPPDATA         equ	3938	;# 
   439   000F63                     SPPCFG          equ	3939	;# 
   440   000F64                     SPPEPS          equ	3940	;# 
   441   000F65                     SPPCON          equ	3941	;# 
   442   000F66                     UFRM            equ	3942	;# 
   443   000F66                     UFRML           equ	3942	;# 
   444   000F67                     UFRMH           equ	3943	;# 
   445   000F68                     UIR             equ	3944	;# 
   446   000F69                     UIE             equ	3945	;# 
   447   000F6A                     UEIR            equ	3946	;# 
   448   000F6B                     UEIE            equ	3947	;# 
   449   000F6C                     USTAT           equ	3948	;# 
   450   000F6D                     UCON            equ	3949	;# 
   451   000F6E                     UADDR           equ	3950	;# 
   452   000F6F                     UCFG            equ	3951	;# 
   453   000F70                     UEP0            equ	3952	;# 
   454   000F71                     UEP1            equ	3953	;# 
   455   000F72                     UEP2            equ	3954	;# 
   456   000F73                     UEP3            equ	3955	;# 
   457   000F74                     UEP4            equ	3956	;# 
   458   000F75                     UEP5            equ	3957	;# 
   459   000F76                     UEP6            equ	3958	;# 
   460   000F77                     UEP7            equ	3959	;# 
   461   000F78                     UEP8            equ	3960	;# 
   462   000F79                     UEP9            equ	3961	;# 
   463   000F7A                     UEP10           equ	3962	;# 
   464   000F7B                     UEP11           equ	3963	;# 
   465   000F7C                     UEP12           equ	3964	;# 
   466   000F7D                     UEP13           equ	3965	;# 
   467   000F7E                     UEP14           equ	3966	;# 
   468   000F7F                     UEP15           equ	3967	;# 
   469   000F80                     PORTA           equ	3968	;# 
   470   000F81                     PORTB           equ	3969	;# 
   471   000F82                     PORTC           equ	3970	;# 
   472   000F83                     PORTD           equ	3971	;# 
   473   000F84                     PORTE           equ	3972	;# 
   474   000F89                     LATA            equ	3977	;# 
   475   000F8A                     LATB            equ	3978	;# 
   476   000F8B                     LATC            equ	3979	;# 
   477   000F8C                     LATD            equ	3980	;# 
   478   000F8D                     LATE            equ	3981	;# 
   479   000F92                     TRISA           equ	3986	;# 
   480   000F92                     DDRA            equ	3986	;# 
   481   000F93                     TRISB           equ	3987	;# 
   482   000F93                     DDRB            equ	3987	;# 
   483   000F94                     TRISC           equ	3988	;# 
   484   000F94                     DDRC            equ	3988	;# 
   485   000F95                     TRISD           equ	3989	;# 
   486   000F95                     DDRD            equ	3989	;# 
   487   000F96                     TRISE           equ	3990	;# 
   488   000F96                     DDRE            equ	3990	;# 
   489   000F9B                     OSCTUNE         equ	3995	;# 
   490   000F9D                     PIE1            equ	3997	;# 
   491   000F9E                     PIR1            equ	3998	;# 
   492   000F9F                     IPR1            equ	3999	;# 
   493   000FA0                     PIE2            equ	4000	;# 
   494   000FA1                     PIR2            equ	4001	;# 
   495   000FA2                     IPR2            equ	4002	;# 
   496   000FA6                     EECON1          equ	4006	;# 
   497   000FA7                     EECON2          equ	4007	;# 
   498   000FA8                     EEDATA          equ	4008	;# 
   499   000FA9                     EEADR           equ	4009	;# 
   500   000FAB                     RCSTA           equ	4011	;# 
   501   000FAB                     RCSTA1          equ	4011	;# 
   502   000FAC                     TXSTA           equ	4012	;# 
   503   000FAC                     TXSTA1          equ	4012	;# 
   504   000FAD                     TXREG           equ	4013	;# 
   505   000FAD                     TXREG1          equ	4013	;# 
   506   000FAE                     RCREG           equ	4014	;# 
   507   000FAE                     RCREG1          equ	4014	;# 
   508   000FAF                     SPBRG           equ	4015	;# 
   509   000FAF                     SPBRG1          equ	4015	;# 
   510   000FB0                     SPBRGH          equ	4016	;# 
   511   000FB1                     T3CON           equ	4017	;# 
   512   000FB2                     TMR3            equ	4018	;# 
   513   000FB2                     TMR3L           equ	4018	;# 
   514   000FB3                     TMR3H           equ	4019	;# 
   515   000FB4                     CMCON           equ	4020	;# 
   516   000FB5                     CVRCON          equ	4021	;# 
   517   000FB6                     ECCP1AS         equ	4022	;# 
   518   000FB6                     CCP1AS          equ	4022	;# 
   519   000FB7                     ECCP1DEL        equ	4023	;# 
   520   000FB7                     CCP1DEL         equ	4023	;# 
   521   000FB8                     BAUDCON         equ	4024	;# 
   522   000FB8                     BAUDCTL         equ	4024	;# 
   523   000FBA                     CCP2CON         equ	4026	;# 
   524   000FBB                     CCPR2           equ	4027	;# 
   525   000FBB                     CCPR2L          equ	4027	;# 
   526   000FBC                     CCPR2H          equ	4028	;# 
   527   000FBD                     CCP1CON         equ	4029	;# 
   528   000FBD                     ECCP1CON        equ	4029	;# 
   529   000FBE                     CCPR1           equ	4030	;# 
   530   000FBE                     CCPR1L          equ	4030	;# 
   531   000FBF                     CCPR1H          equ	4031	;# 
   532   000FC0                     ADCON2          equ	4032	;# 
   533   000FC1                     ADCON1          equ	4033	;# 
   534   000FC2                     ADCON0          equ	4034	;# 
   535   000FC3                     ADRES           equ	4035	;# 
   536   000FC3                     ADRESL          equ	4035	;# 
   537   000FC4                     ADRESH          equ	4036	;# 
   538   000FC5                     SSPCON2         equ	4037	;# 
   539   000FC6                     SSPCON1         equ	4038	;# 
   540   000FC7                     SSPSTAT         equ	4039	;# 
   541   000FC8                     SSPADD          equ	4040	;# 
   542   000FC9                     SSPBUF          equ	4041	;# 
   543   000FCA                     T2CON           equ	4042	;# 
   544   000FCB                     PR2             equ	4043	;# 
   545   000FCB                     MEMCON          equ	4043	;# 
   546   000FCC                     TMR2            equ	4044	;# 
   547   000FCD                     T1CON           equ	4045	;# 
   548   000FCE                     TMR1            equ	4046	;# 
   549   000FCE                     TMR1L           equ	4046	;# 
   550   000FCF                     TMR1H           equ	4047	;# 
   551   000FD0                     RCON            equ	4048	;# 
   552   000FD1                     WDTCON          equ	4049	;# 
   553   000FD2                     HLVDCON         equ	4050	;# 
   554   000FD2                     LVDCON          equ	4050	;# 
   555   000FD3                     OSCCON          equ	4051	;# 
   556   000FD5                     T0CON           equ	4053	;# 
   557   000FD6                     TMR0            equ	4054	;# 
   558   000FD6                     TMR0L           equ	4054	;# 
   559   000FD7                     TMR0H           equ	4055	;# 
   560   000FD8                     STATUS          equ	4056	;# 
   561   000FD9                     FSR2            equ	4057	;# 
   562   000FD9                     FSR2L           equ	4057	;# 
   563   000FDA                     FSR2H           equ	4058	;# 
   564   000FDB                     PLUSW2          equ	4059	;# 
   565   000FDC                     PREINC2         equ	4060	;# 
   566   000FDD                     POSTDEC2        equ	4061	;# 
   567   000FDE                     POSTINC2        equ	4062	;# 
   568   000FDF                     INDF2           equ	4063	;# 
   569   000FE0                     BSR             equ	4064	;# 
   570   000FE1                     FSR1            equ	4065	;# 
   571   000FE1                     FSR1L           equ	4065	;# 
   572   000FE2                     FSR1H           equ	4066	;# 
   573   000FE3                     PLUSW1          equ	4067	;# 
   574   000FE4                     PREINC1         equ	4068	;# 
   575   000FE5                     POSTDEC1        equ	4069	;# 
   576   000FE6                     POSTINC1        equ	4070	;# 
   577   000FE7                     INDF1           equ	4071	;# 
   578   000FE8                     WREG            equ	4072	;# 
   579   000FE9                     FSR0            equ	4073	;# 
   580   000FE9                     FSR0L           equ	4073	;# 
   581   000FEA                     FSR0H           equ	4074	;# 
   582   000FEB                     PLUSW0          equ	4075	;# 
   583   000FEC                     PREINC0         equ	4076	;# 
   584   000FED                     POSTDEC0        equ	4077	;# 
   585   000FEE                     POSTINC0        equ	4078	;# 
   586   000FEF                     INDF0           equ	4079	;# 
   587   000FF0                     INTCON3         equ	4080	;# 
   588   000FF1                     INTCON2         equ	4081	;# 
   589   000FF2                     INTCON          equ	4082	;# 
   590   000FF3                     PROD            equ	4083	;# 
   591   000FF3                     PRODL           equ	4083	;# 
   592   000FF4                     PRODH           equ	4084	;# 
   593   000FF5                     TABLAT          equ	4085	;# 
   594   000FF6                     TBLPTR          equ	4086	;# 
   595   000FF6                     TBLPTRL         equ	4086	;# 
   596   000FF7                     TBLPTRH         equ	4087	;# 
   597   000FF8                     TBLPTRU         equ	4088	;# 
   598   000FF9                     PCLAT           equ	4089	;# 
   599   000FF9                     PC              equ	4089	;# 
   600   000FF9                     PCL             equ	4089	;# 
   601   000FFA                     PCLATH          equ	4090	;# 
   602   000FFB                     PCLATU          equ	4091	;# 
   603   000FFC                     STKPTR          equ	4092	;# 
   604   000FFD                     TOS             equ	4093	;# 
   605   000FFD                     TOSL            equ	4093	;# 
   606   000FFE                     TOSH            equ	4094	;# 
   607   000FFF                     TOSU            equ	4095	;# 
   608                           
   609                           	psect	idataCOMRAM
   610   000AAA                     __pidataCOMRAM:
   611                           	callstack 0
   612                           
   613                           ;initializer for _bit_mode
   614   000AAA  0001               	dw	1
   615   000F93                     _TRISBbits      set	3987
   616   000F96                     _TRISEbits      set	3990
   617   000F95                     _TRISD          set	3989
   618   000F83                     _PORTD          set	3971
   619   000F84                     _PORTEbits      set	3972
   620   000F81                     _PORTBbits      set	3969
   621                           
   622                           	psect	smallconst
   623   000800                     __psmallconst:
   624                           	callstack 0
   625   000800  00                 	db	0
   626   000801                     STR_3:
   627   000801  34                 	db	52	;'4'
   628   000802  2D                 	db	45
   629   000803  62                 	db	98	;'b'
   630   000804  69                 	db	105	;'i'
   631   000805  74                 	db	116	;'t'
   632   000806  20                 	db	32
   633   000807  6D                 	db	109	;'m'
   634   000808  6F                 	db	111	;'o'
   635   000809  64                 	db	100	;'d'
   636   00080A  65                 	db	101	;'e'
   637   00080B  00                 	db	0
   638   00080C                     STR_1:
   639   00080C  38                 	db	56	;'8'
   640   00080D  2D                 	db	45
   641   00080E  62                 	db	98	;'b'
   642   00080F  69                 	db	105	;'i'
   643   000810  74                 	db	116	;'t'
   644   000811  20                 	db	32
   645   000812  6D                 	db	109	;'m'
   646   000813  6F                 	db	111	;'o'
   647   000814  64                 	db	100	;'d'
   648   000815  65                 	db	101	;'e'
   649   000816  00                 	db	0
   650   000817                     STR_2:
   651   000817  59                 	db	89	;'Y'
   652   000818  61                 	db	97	;'a'
   653   000819  79                 	db	121	;'y'
   654   00081A  79                 	db	121	;'y'
   655   00081B  21                 	db	33
   656   00081C  21                 	db	33
   657   00081D  00                 	db	0
   658   000817                     STR_4           equ	STR_2
   659   00081E  00                 	db	0	; dummy byte at the end
   660   000001                     __activetblptr  equ	1
   661                           
   662                           ; #config settings
   663                           
   664                           	psect	cinit
   665   000A4E                     __pcinit:
   666                           	callstack 0
   667   000A4E                     start_initialization:
   668                           	callstack 0
   669   000A4E                     __initialization:
   670                           	callstack 0
   671                           
   672                           ; Initialize objects allocated to COMRAM (2 bytes)
   673                           ; load TBLPTR registers with __pidataCOMRAM
   674   000A4E  0EAA               	movlw	low __pidataCOMRAM
   675   000A50  6EF6               	movwf	tblptrl,c
   676   000A52  0E0A               	movlw	high __pidataCOMRAM
   677   000A54  6EF7               	movwf	tblptrh,c
   678   000A56  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   679   000A58  6EF8               	movwf	tblptru,c
   680   000A5A  0009               	tblrd		*+	;fetch initializer
   681   000A5C  CFF5 F006          	movff	tablat,__pdataCOMRAM
   682   000A60  0009               	tblrd		*+	;fetch initializer
   683   000A62  CFF5 F007          	movff	tablat,__pdataCOMRAM+1
   684   000A66                     end_of_initialization:
   685                           	callstack 0
   686   000A66                     __end_of__initialization:
   687                           	callstack 0
   688   000A66  0E00               	movlw	low (__Lsmallconst shr (0+16))
   689   000A68  6EF8               	movwf	tblptru,c
   690   000A6A  0E08               	movlw	high __Lsmallconst
   691   000A6C  6EF7               	movwf	tblptrh,c
   692   000A6E  0100               	movlb	0
   693   000A70  EF91  F004         	goto	_main	;jump to C main() function
   694                           
   695                           	psect	dataCOMRAM
   696   000006                     __pdataCOMRAM:
   697                           	callstack 0
   698   000006                     _bit_mode:
   699                           	callstack 0
   700   000006                     	ds	2
   701                           
   702                           	psect	cstackCOMRAM
   703   000001                     __pcstackCOMRAM:
   704                           	callstack 0
   705   000001                     clcd_write@mode:
   706                           	callstack 0
   707   000001                     
   708                           ; 1 bytes @ 0x0
   709   000001                     	ds	1
   710   000002                     ??_clcd_write:
   711                           
   712                           ; 1 bytes @ 0x1
   713   000002                     	ds	1
   714   000003                     clcd_write@byte:
   715                           	callstack 0
   716                           
   717                           ; 1 bytes @ 0x2
   718   000003                     	ds	1
   719   000004                     clcd_print@str:
   720                           	callstack 0
   721   000004                     ??_init_display_controller:
   722                           
   723                           ; 1 bytes @ 0x3
   724   000004                     	ds	1
   725   000005                     clcd_print@addr:
   726                           	callstack 0
   727   000005                     
   728                           ; 1 bytes @ 0x4
   729   000005                     	ds	1
   730   000006                     
   731                           ; 1 bytes @ 0x5
   732 ;;
   733 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   734 ;;
   735 ;; *************** function _main *****************
   736 ;; Defined at:
   737 ;;		line 17 in file "main.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;		None
   740 ;; Auto vars:     Size  Location     Type
   741 ;;  once            1    0        unsigned char 
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   751 ;;      Params:         0       0       0       0       0       0       0       0       0
   752 ;;      Locals:         0       0       0       0       0       0       0       0       0
   753 ;;      Temps:          0       0       0       0       0       0       0       0       0
   754 ;;      Totals:         0       0       0       0       0       0       0       0       0
   755 ;;Total ram usage:        0 bytes
   756 ;; Hardware stack levels required when called: 4
   757 ;; This function calls:
   758 ;;		_clcd_print
   759 ;;		_display_controller
   760 ;;		_init_config
   761 ;; This function is called by:
   762 ;;		Startup code after reset
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           	psect	text0
   767   000922                     __ptext0:
   768                           	callstack 0
   769   000922                     _main:
   770                           	callstack 27
   771   000922                     
   772                           ;main.c: 18:     init_config();
   773   000922  EC44  F005         	call	_init_config	;wreg free
   774   000926                     l941:
   775                           
   776                           ;main.c: 21:         if (PORTBbits.RB2 == 1 )
   777   000926  A481               	btfss	129,2,c	;volatile
   778   000928  EF98  F004         	goto	u151
   779   00092C  EF9A  F004         	goto	u150
   780   000930                     u151:
   781   000930  EFB2  F004         	goto	l21
   782   000934                     u150:
   783   000934                     
   784                           ;main.c: 22:         {;main.c: 23:             bit_mode = 1;
   785   000934  0E00               	movlw	0
   786   000936  6E07               	movwf	(_bit_mode+1)^0,c
   787   000938  0E01               	movlw	1
   788   00093A  6E06               	movwf	_bit_mode^0,c
   789   00093C                     
   790                           ;main.c: 24:             display_controller();
   791   00093C  EC52  F005         	call	_display_controller	;wreg free
   792   000940                     
   793                           ;main.c: 25:             clcd_print("8-bit mode", (0x80 + 2));
   794   000940  0E0C               	movlw	low STR_1
   795   000942  6E04               	movwf	clcd_print@str^0,c
   796   000944  0E82               	movlw	130
   797   000946  6E05               	movwf	clcd_print@addr^0,c
   798   000948  EC0A  F005         	call	_clcd_print	;wreg free
   799   00094C                     
   800                           ;main.c: 26:             clcd_print("Yayy!!", (0xC0 + 4));
   801   00094C  0E17               	movlw	low STR_2
   802   00094E  6E04               	movwf	clcd_print@str^0,c
   803   000950  0EC4               	movlw	196
   804   000952  6E05               	movwf	clcd_print@addr^0,c
   805   000954  EC0A  F005         	call	_clcd_print	;wreg free
   806   000958                     
   807                           ;main.c: 27:             bit_mode = 0;
   808   000958  0E00               	movlw	0
   809   00095A  6E07               	movwf	(_bit_mode+1)^0,c
   810   00095C  0E00               	movlw	0
   811   00095E  6E06               	movwf	_bit_mode^0,c
   812   000960                     l953:
   813                           
   814                           ;main.c: 29:         }
   815   000960  EF93  F004         	goto	l941
   816   000964                     l21:
   817   000964  B281               	btfsc	129,1,c	;volatile
   818   000966  EFB7  F004         	goto	u161
   819   00096A  EFB9  F004         	goto	u160
   820   00096E                     u161:
   821   00096E  EF93  F004         	goto	l941
   822   000972                     u160:
   823   000972                     
   824                           ;main.c: 31:         {;main.c: 32:             bit_mode = 0;
   825   000972  0E00               	movlw	0
   826   000974  6E07               	movwf	(_bit_mode+1)^0,c
   827   000976  0E00               	movlw	0
   828   000978  6E06               	movwf	_bit_mode^0,c
   829   00097A                     
   830                           ;main.c: 33:             display_controller();
   831   00097A  EC52  F005         	call	_display_controller	;wreg free
   832   00097E                     
   833                           ;main.c: 34:             clcd_print("4-bit mode", (0x80 + 2));
   834   00097E  0E01               	movlw	low STR_3
   835   000980  6E04               	movwf	clcd_print@str^0,c
   836   000982  0E82               	movlw	130
   837   000984  6E05               	movwf	clcd_print@addr^0,c
   838   000986  EC0A  F005         	call	_clcd_print	;wreg free
   839   00098A                     
   840                           ;main.c: 35:             clcd_print("Yayy!!", (0xC0 + 4));
   841   00098A  0E17               	movlw	low STR_2
   842   00098C  6E04               	movwf	clcd_print@str^0,c
   843   00098E  0EC4               	movlw	196
   844   000990  6E05               	movwf	clcd_print@addr^0,c
   845   000992  EC0A  F005         	call	_clcd_print	;wreg free
   846   000996  EFB0  F004         	goto	l953
   847   00099A  EF00  F000         	goto	start
   848   00099E                     __end_of_main:
   849                           	callstack 0
   850                           
   851 ;; *************** function _init_config *****************
   852 ;; Defined at:
   853 ;;		line 12 in file "main.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;		None
   856 ;; Auto vars:     Size  Location     Type
   857 ;;		None
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      void 
   860 ;; Registers used:
   861 ;;		cstack
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   867 ;;      Params:         0       0       0       0       0       0       0       0       0
   868 ;;      Locals:         0       0       0       0       0       0       0       0       0
   869 ;;      Temps:          0       0       0       0       0       0       0       0       0
   870 ;;      Totals:         0       0       0       0       0       0       0       0       0
   871 ;;Total ram usage:        0 bytes
   872 ;; Hardware stack levels used: 1
   873 ;; Hardware stack levels required when called: 1
   874 ;; This function calls:
   875 ;;		_init_clcd
   876 ;;		_init_switch
   877 ;; This function is called by:
   878 ;;		_main
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           	psect	text1
   883   000A88                     __ptext1:
   884                           	callstack 0
   885   000A88                     _init_config:
   886                           	callstack 29
   887   000A88                     
   888                           ;main.c: 13:     init_clcd();
   889   000A88  EC4E  F005         	call	_init_clcd	;wreg free
   890                           
   891                           ;main.c: 14:     init_switch();
   892   000A8C  EC49  F005         	call	_init_switch	;wreg free
   893   000A90  0012               	return		;funcret
   894   000A92                     __end_of_init_config:
   895                           	callstack 0
   896                           
   897 ;; *************** function _init_switch *****************
   898 ;; Defined at:
   899 ;;		line 12 in file "switch.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		None
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   913 ;;      Params:         0       0       0       0       0       0       0       0       0
   914 ;;      Locals:         0       0       0       0       0       0       0       0       0
   915 ;;      Temps:          0       0       0       0       0       0       0       0       0
   916 ;;      Totals:         0       0       0       0       0       0       0       0       0
   917 ;;Total ram usage:        0 bytes
   918 ;; Hardware stack levels used: 1
   919 ;; This function calls:
   920 ;;		Nothing
   921 ;; This function is called by:
   922 ;;		_init_config
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text2
   927   000A92                     __ptext2:
   928                           	callstack 0
   929   000A92                     _init_switch:
   930                           	callstack 29
   931   000A92                     
   932                           ;switch.c: 14:     TRISBbits.RB2 = 0x01;
   933   000A92  8493               	bsf	147,2,c	;volatile
   934                           
   935                           ;switch.c: 15:     TRISBbits.RB1 = 0x01;
   936   000A94  8293               	bsf	147,1,c	;volatile
   937                           
   938                           ;switch.c: 19:     PORTBbits.RB2 = 0x01;
   939   000A96  8481               	bsf	129,2,c	;volatile
   940                           
   941                           ;switch.c: 20:     PORTBbits.RB1 = 0x01;
   942   000A98  8281               	bsf	129,1,c	;volatile
   943   000A9A  0012               	return		;funcret
   944   000A9C                     __end_of_init_switch:
   945                           	callstack 0
   946                           
   947 ;; *************** function _init_clcd *****************
   948 ;; Defined at:
   949 ;;		line 69 in file "clcd.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;                  1    wreg      void 
   956 ;; Registers used:
   957 ;;		None
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   963 ;;      Params:         0       0       0       0       0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0       0       0       0       0
   965 ;;      Temps:          0       0       0       0       0       0       0       0       0
   966 ;;      Totals:         0       0       0       0       0       0       0       0       0
   967 ;;Total ram usage:        0 bytes
   968 ;; Hardware stack levels used: 1
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		_init_config
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text3
   977   000A9C                     __ptext3:
   978                           	callstack 0
   979   000A9C                     _init_clcd:
   980                           	callstack 29
   981   000A9C                     
   982                           ;clcd.c: 71:     TRISD = 0x00;
   983   000A9C  6A95               	clrf	149,c	;volatile
   984                           
   985                           ;clcd.c: 74:     TRISEbits.RE2 = 0;
   986   000A9E  9496               	bcf	150,2,c	;volatile
   987                           
   988                           ;clcd.c: 75:     TRISEbits.RE1 = 0;
   989   000AA0  9296               	bcf	150,1,c	;volatile
   990   000AA2  0012               	return		;funcret
   991   000AA4                     __end_of_init_clcd:
   992                           	callstack 0
   993                           
   994 ;; *************** function _display_controller *****************
   995 ;; Defined at:
   996 ;;		line 92 in file "clcd.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;		None
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;		None
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg, status,2, status,0, cstack
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1010 ;;      Params:         0       0       0       0       0       0       0       0       0
  1011 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1012 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1013 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1014 ;;Total ram usage:        0 bytes
  1015 ;; Hardware stack levels used: 1
  1016 ;; Hardware stack levels required when called: 3
  1017 ;; This function calls:
  1018 ;;		_init_display_controller
  1019 ;; This function is called by:
  1020 ;;		_main
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           	psect	text4
  1025   000AA4                     __ptext4:
  1026                           	callstack 0
  1027   000AA4                     _display_controller:
  1028                           	callstack 27
  1029   000AA4                     
  1030                           ;clcd.c: 94:     init_display_controller();
  1031   000AA4  EC10  F004         	call	_init_display_controller	;wreg free
  1032   000AA8  0012               	return		;funcret
  1033   000AAA                     __end_of_display_controller:
  1034                           	callstack 0
  1035                           
  1036 ;; *************** function _init_display_controller *****************
  1037 ;; Defined at:
  1038 ;;		line 25 in file "clcd.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      void 
  1045 ;; Registers used:
  1046 ;;		wreg, status,2, status,0, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1052 ;;      Params:         0       0       0       0       0       0       0       0       0
  1053 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1054 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1055 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1056 ;;Total ram usage:        1 bytes
  1057 ;; Hardware stack levels used: 1
  1058 ;; Hardware stack levels required when called: 2
  1059 ;; This function calls:
  1060 ;;		_clcd_4_bit_mode
  1061 ;;		_clcd_write
  1062 ;; This function is called by:
  1063 ;;		_display_controller
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           	psect	text5
  1068   000820                     __ptext5:
  1069                           	callstack 0
  1070   000820                     _init_display_controller:
  1071                           	callstack 27
  1072   000820                     
  1073                           ;clcd.c: 29:     if (bit_mode == 0) {
  1074   000820  5006               	movf	_bit_mode^0,w,c
  1075   000822  1007               	iorwf	(_bit_mode+1)^0,w,c
  1076   000824  A4D8               	btfss	status,2,c
  1077   000826  EF17  F004         	goto	u121
  1078   00082A  EF19  F004         	goto	u120
  1079   00082E                     u121:
  1080   00082E  EF43  F004         	goto	l905
  1081   000832                     u120:
  1082   000832                     
  1083                           ;clcd.c: 32:         _delay((unsigned long)((30)*(20000000/4000.0)));
  1084   000832  0EC3               	movlw	195
  1085   000834  6E04               	movwf	??_init_display_controller^0,c
  1086   000836  0ECD               	movlw	205
  1087   000838                     u177:
  1088   000838  2EE8               	decfsz	wreg,f,c
  1089   00083A  D7FE               	bra	u177
  1090   00083C  2E04               	decfsz	??_init_display_controller^0,f,c
  1091   00083E  D7FC               	bra	u177
  1092   000840  0000               	nop	
  1093   000842                     
  1094                           ;clcd.c: 35:         clcd_write(0x33, 0);
  1095   000842  0E00               	movlw	0
  1096   000844  6E01               	movwf	clcd_write@mode^0,c
  1097   000846  0E33               	movlw	51
  1098   000848  ECCF  F004         	call	_clcd_write
  1099   00084C                     
  1100                           ;clcd.c: 36:         _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1101   00084C  0E1B               	movlw	27
  1102   00084E  6E04               	movwf	??_init_display_controller^0,c
  1103   000850  0E9E               	movlw	158
  1104   000852                     u187:
  1105   000852  2EE8               	decfsz	wreg,f,c
  1106   000854  D7FE               	bra	u187
  1107   000856  2E04               	decfsz	??_init_display_controller^0,f,c
  1108   000858  D7FC               	bra	u187
  1109   00085A  D000               	nop2	
  1110                           
  1111                           ;clcd.c: 37:         clcd_write(0x33, 0);
  1112   00085C  0E00               	movlw	0
  1113   00085E  6E01               	movwf	clcd_write@mode^0,c
  1114   000860  0E33               	movlw	51
  1115   000862  ECCF  F004         	call	_clcd_write
  1116   000866                     
  1117                           ;clcd.c: 38:         _delay((unsigned long)((100)*(20000000/4000000.0)));
  1118   000866  0EA6               	movlw	166
  1119   000868                     u197:
  1120   000868  2EE8               	decfsz	wreg,f,c
  1121   00086A  D7FE               	bra	u197
  1122   00086C  D000               	nop2	
  1123   00086E                     
  1124                           ;clcd.c: 39:         clcd_write(0x33, 0);
  1125   00086E  0E00               	movlw	0
  1126   000870  6E01               	movwf	clcd_write@mode^0,c
  1127   000872  0E33               	movlw	51
  1128   000874  ECCF  F004         	call	_clcd_write
  1129   000878                     
  1130                           ;clcd.c: 40:         _delay((unsigned long)((1)*(20000000/4000000.0)));
  1131   000878  D000               	nop2		;2 cycle nop
  1132   00087A  D000               	nop2		;2 cycle nop
  1133   00087C  0000               	nop	
  1134   00087E                     
  1135                           ;clcd.c: 41:         clcd_4_bit_mode();
  1136   00087E  EC3A  F005         	call	_clcd_4_bit_mode	;wreg free
  1137                           
  1138                           ;clcd.c: 42:     } else if (bit_mode == 1) {
  1139   000882  EF72  F004         	goto	l919
  1140   000886                     l905:
  1141   000886  0406               	decf	_bit_mode^0,w,c
  1142   000888  1007               	iorwf	(_bit_mode+1)^0,w,c
  1143   00088A  A4D8               	btfss	status,2,c
  1144   00088C  EF4A  F004         	goto	u131
  1145   000890  EF4C  F004         	goto	u130
  1146   000894                     u131:
  1147   000894  EF72  F004         	goto	l919
  1148   000898                     u130:
  1149   000898                     
  1150                           ;clcd.c: 44:         _delay((unsigned long)((30)*(20000000/4000.0)));
  1151   000898  0EC3               	movlw	195
  1152   00089A  6E04               	movwf	??_init_display_controller^0,c
  1153   00089C  0ECD               	movlw	205
  1154   00089E                     u207:
  1155   00089E  2EE8               	decfsz	wreg,f,c
  1156   0008A0  D7FE               	bra	u207
  1157   0008A2  2E04               	decfsz	??_init_display_controller^0,f,c
  1158   0008A4  D7FC               	bra	u207
  1159   0008A6  0000               	nop	
  1160   0008A8                     
  1161                           ;clcd.c: 47:         clcd_write(0x33, 0);
  1162   0008A8  0E00               	movlw	0
  1163   0008AA  6E01               	movwf	clcd_write@mode^0,c
  1164   0008AC  0E33               	movlw	51
  1165   0008AE  ECCF  F004         	call	_clcd_write
  1166   0008B2                     
  1167                           ;clcd.c: 48:         _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1168   0008B2  0E1B               	movlw	27
  1169   0008B4  6E04               	movwf	??_init_display_controller^0,c
  1170   0008B6  0E9E               	movlw	158
  1171   0008B8                     u217:
  1172   0008B8  2EE8               	decfsz	wreg,f,c
  1173   0008BA  D7FE               	bra	u217
  1174   0008BC  2E04               	decfsz	??_init_display_controller^0,f,c
  1175   0008BE  D7FC               	bra	u217
  1176   0008C0  D000               	nop2	
  1177                           
  1178                           ;clcd.c: 49:         clcd_write(0x33, 0);
  1179   0008C2  0E00               	movlw	0
  1180   0008C4  6E01               	movwf	clcd_write@mode^0,c
  1181   0008C6  0E33               	movlw	51
  1182   0008C8  ECCF  F004         	call	_clcd_write
  1183   0008CC                     
  1184                           ;clcd.c: 50:         _delay((unsigned long)((100)*(20000000/4000000.0)));
  1185   0008CC  0EA6               	movlw	166
  1186   0008CE                     u227:
  1187   0008CE  2EE8               	decfsz	wreg,f,c
  1188   0008D0  D7FE               	bra	u227
  1189   0008D2  D000               	nop2	
  1190   0008D4                     
  1191                           ;clcd.c: 51:         clcd_write(0x33, 0);
  1192   0008D4  0E00               	movlw	0
  1193   0008D6  6E01               	movwf	clcd_write@mode^0,c
  1194   0008D8  0E33               	movlw	51
  1195   0008DA  ECCF  F004         	call	_clcd_write
  1196   0008DE                     
  1197                           ;clcd.c: 52:         _delay((unsigned long)((1)*(20000000/4000000.0)));
  1198   0008DE  D000               	nop2		;2 cycle nop
  1199   0008E0  D000               	nop2		;2 cycle nop
  1200   0008E2  0000               	nop	
  1201   0008E4                     l919:
  1202                           
  1203                           ;clcd.c: 55:     clcd_write(0x28, 0);
  1204   0008E4  0E00               	movlw	0
  1205   0008E6  6E01               	movwf	clcd_write@mode^0,c
  1206   0008E8  0E28               	movlw	40
  1207   0008EA  ECCF  F004         	call	_clcd_write
  1208   0008EE                     
  1209                           ;clcd.c: 56:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1210   0008EE  0EA6               	movlw	166
  1211   0008F0                     u237:
  1212   0008F0  2EE8               	decfsz	wreg,f,c
  1213   0008F2  D7FE               	bra	u237
  1214   0008F4  D000               	nop2	
  1215                           
  1216                           ;clcd.c: 57:     clcd_write(0X01, 0);
  1217   0008F6  0E00               	movlw	0
  1218   0008F8  6E01               	movwf	clcd_write@mode^0,c
  1219   0008FA  0E01               	movlw	1
  1220   0008FC  ECCF  F004         	call	_clcd_write
  1221   000900                     
  1222                           ;clcd.c: 58:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  1223   000900  0E04               	movlw	4
  1224   000902  6E04               	movwf	??_init_display_controller^0,c
  1225   000904  0E3E               	movlw	62
  1226   000906                     u247:
  1227   000906  2EE8               	decfsz	wreg,f,c
  1228   000908  D7FE               	bra	u247
  1229   00090A  2E04               	decfsz	??_init_display_controller^0,f,c
  1230   00090C  D7FC               	bra	u247
  1231   00090E                     
  1232                           ;clcd.c: 59:     clcd_write(0X0C, 0);
  1233   00090E  0E00               	movlw	0
  1234   000910  6E01               	movwf	clcd_write@mode^0,c
  1235   000912  0E0C               	movlw	12
  1236   000914  ECCF  F004         	call	_clcd_write
  1237                           
  1238                           ;clcd.c: 60:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1239   000918  0EA6               	movlw	166
  1240   00091A                     u257:
  1241   00091A  2EE8               	decfsz	wreg,f,c
  1242   00091C  D7FE               	bra	u257
  1243   00091E  D000               	nop2	
  1244   000920  0012               	return		;funcret
  1245   000922                     __end_of_init_display_controller:
  1246                           	callstack 0
  1247                           
  1248 ;; *************** function _clcd_4_bit_mode *****************
  1249 ;; Defined at:
  1250 ;;		line 64 in file "clcd.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;		None
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;		None
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  1    wreg      void 
  1257 ;; Registers used:
  1258 ;;		wreg, status,2, status,0, cstack
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1264 ;;      Params:         0       0       0       0       0       0       0       0       0
  1265 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1266 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1267 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1268 ;;Total ram usage:        0 bytes
  1269 ;; Hardware stack levels used: 1
  1270 ;; Hardware stack levels required when called: 1
  1271 ;; This function calls:
  1272 ;;		_clcd_write
  1273 ;; This function is called by:
  1274 ;;		_init_display_controller
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text6
  1279   000A74                     __ptext6:
  1280                           	callstack 0
  1281   000A74                     _clcd_4_bit_mode:
  1282                           	callstack 27
  1283   000A74                     
  1284                           ;clcd.c: 65:     clcd_write(0x02, 0);
  1285   000A74  0E00               	movlw	0
  1286   000A76  6E01               	movwf	clcd_write@mode^0,c
  1287   000A78  0E02               	movlw	2
  1288   000A7A  ECCF  F004         	call	_clcd_write
  1289   000A7E                     
  1290                           ;clcd.c: 66:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1291   000A7E  0EA6               	movlw	166
  1292   000A80                     u267:
  1293   000A80  2EE8               	decfsz	wreg,f,c
  1294   000A82  D7FE               	bra	u267
  1295   000A84  D000               	nop2	
  1296   000A86  0012               	return		;funcret
  1297   000A88                     __end_of_clcd_4_bit_mode:
  1298                           	callstack 0
  1299                           
  1300 ;; *************** function _clcd_print *****************
  1301 ;; Defined at:
  1302 ;;		line 83 in file "clcd.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;  str             1    3[COMRAM] PTR const unsigned char 
  1305 ;;		 -> STR_4(7), STR_3(11), STR_2(7), STR_1(11), 
  1306 ;;  addr            1    4[COMRAM] unsigned char 
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;		None
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1318 ;;      Params:         2       0       0       0       0       0       0       0       0
  1319 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1320 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1321 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1322 ;;Total ram usage:        2 bytes
  1323 ;; Hardware stack levels used: 1
  1324 ;; Hardware stack levels required when called: 1
  1325 ;; This function calls:
  1326 ;;		_clcd_write
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text7
  1333   000A14                     __ptext7:
  1334                           	callstack 0
  1335   000A14                     _clcd_print:
  1336                           	callstack 29
  1337   000A14                     
  1338                           ;clcd.c: 84:     clcd_write(addr, 0);
  1339   000A14  0E00               	movlw	0
  1340   000A16  6E01               	movwf	clcd_write@mode^0,c
  1341   000A18  5005               	movf	clcd_print@addr^0,w,c
  1342   000A1A  ECCF  F004         	call	_clcd_write
  1343                           
  1344                           ;clcd.c: 86:     while (*str != '\0') {
  1345   000A1E  EF1A  F005         	goto	l935
  1346   000A22                     l931:
  1347                           
  1348                           ;clcd.c: 87:         clcd_write(*str, 1);
  1349   000A22  0E01               	movlw	1
  1350   000A24  6E01               	movwf	clcd_write@mode^0,c
  1351   000A26  C004  FFF6         	movff	clcd_print@str,tblptrl
  1352   000A2A                     	if	0	;There is only one active tblptr byte
  1353   000A2A                     	endif
  1354   000A2A                     	if	0	;tblptru may be non-zero
  1355   000A2A                     	endif
  1356   000A2A                     	if	0	;tblptru may be non-zero
  1357   000A2A                     	endif
  1358   000A2A  0008               	tblrd		*
  1359   000A2C  50F5               	movf	tablat,w,c
  1360   000A2E  ECCF  F004         	call	_clcd_write
  1361   000A32                     
  1362                           ;clcd.c: 88:         str++;
  1363   000A32  2A04               	incf	clcd_print@str^0,f,c
  1364   000A34                     l935:
  1365                           
  1366                           ;clcd.c: 86:     while (*str != '\0') {
  1367   000A34  C004  FFF6         	movff	clcd_print@str,tblptrl
  1368   000A38                     	if	0	;There is only one active tblptr byte
  1369   000A38                     	endif
  1370   000A38                     	if	0	;tblptru may be non-zero
  1371   000A38                     	endif
  1372   000A38                     	if	0	;tblptru may be non-zero
  1373   000A38                     	endif
  1374   000A38  0008               	tblrd		*
  1375   000A3A  50F5               	movf	tablat,w,c
  1376   000A3C  0900               	iorlw	0
  1377   000A3E  A4D8               	btfss	status,2,c
  1378   000A40  EF24  F005         	goto	u141
  1379   000A44  EF26  F005         	goto	u140
  1380   000A48                     u141:
  1381   000A48  EF11  F005         	goto	l931
  1382   000A4C                     u140:
  1383   000A4C  0012               	return		;funcret
  1384   000A4E                     __end_of_clcd_print:
  1385                           	callstack 0
  1386                           
  1387 ;; *************** function _clcd_write *****************
  1388 ;; Defined at:
  1389 ;;		line 6 in file "clcd.c"
  1390 ;; Parameters:    Size  Location     Type
  1391 ;;  byte            1    wreg     unsigned char 
  1392 ;;  mode            1    0[COMRAM] unsigned char 
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;  byte            1    2[COMRAM] unsigned char 
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      void 
  1397 ;; Registers used:
  1398 ;;		wreg, status,2, status,0
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1404 ;;      Params:         1       0       0       0       0       0       0       0       0
  1405 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1406 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1407 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1408 ;;Total ram usage:        3 bytes
  1409 ;; Hardware stack levels used: 1
  1410 ;; This function calls:
  1411 ;;		Nothing
  1412 ;; This function is called by:
  1413 ;;		_init_display_controller
  1414 ;;		_clcd_4_bit_mode
  1415 ;;		_clcd_print
  1416 ;;		_clcd_putch
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           	psect	text8
  1421   00099E                     __ptext8:
  1422                           	callstack 0
  1423   00099E                     _clcd_write:
  1424                           	callstack 28
  1425                           
  1426                           ;incstack = 0
  1427                           ;clcd_write@byte stored from wreg
  1428   00099E  6E03               	movwf	clcd_write@byte^0,c
  1429   0009A0                     
  1430                           ;clcd.c: 7:     PORTEbits.RE2 = mode;
  1431   0009A0  B001               	btfsc	clcd_write@mode^0,0,c
  1432   0009A2  D002               	bra	u95
  1433   0009A4  9484               	bcf	132,2,c	;volatile
  1434   0009A6  D001               	bra	u96
  1435   0009A8                     u95:
  1436   0009A8  8484               	bsf	132,2,c	;volatile
  1437   0009AA                     u96:
  1438   0009AA                     
  1439                           ;clcd.c: 8:     if (bit_mode == 0) {
  1440   0009AA  5006               	movf	_bit_mode^0,w,c
  1441   0009AC  1007               	iorwf	(_bit_mode+1)^0,w,c
  1442   0009AE  A4D8               	btfss	status,2,c
  1443   0009B0  EFDC  F004         	goto	u101
  1444   0009B4  EFDE  F004         	goto	u100
  1445   0009B8                     u101:
  1446   0009B8  EFF0  F004         	goto	l877
  1447   0009BC                     u100:
  1448   0009BC                     
  1449                           ;clcd.c: 9:         PORTD = byte & 0xF0;
  1450   0009BC  5003               	movf	clcd_write@byte^0,w,c
  1451   0009BE  0BF0               	andlw	240
  1452   0009C0  6E83               	movwf	131,c	;volatile
  1453   0009C2                     
  1454                           ;clcd.c: 10:         PORTEbits.RE1 = 1;
  1455   0009C2  8284               	bsf	132,1,c	;volatile
  1456   0009C4                     
  1457                           ;clcd.c: 11:         _delay((unsigned long)((100)*(20000000/4000000.0)));
  1458   0009C4  0EA6               	movlw	166
  1459   0009C6                     u277:
  1460   0009C6  2EE8               	decfsz	wreg,f,c
  1461   0009C8  D7FE               	bra	u277
  1462   0009CA  D000               	nop2	
  1463   0009CC                     
  1464                           ;clcd.c: 12:         PORTEbits.RE1 = 0;
  1465   0009CC  9284               	bcf	132,1,c	;volatile
  1466   0009CE                     
  1467                           ;clcd.c: 14:         PORTD = (byte & 0x0F) << 4;
  1468   0009CE  C003  F002         	movff	clcd_write@byte,??_clcd_write
  1469   0009D2  0E0F               	movlw	15
  1470   0009D4  1602               	andwf	??_clcd_write^0,f,c
  1471   0009D6  3802               	swapf	??_clcd_write^0,w,c
  1472   0009D8  0BF0               	andlw	240
  1473   0009DA  6E83               	movwf	131,c	;volatile
  1474                           
  1475                           ;clcd.c: 15:     } else if (bit_mode == 1) {
  1476   0009DC  EFFB  F004         	goto	l44
  1477   0009E0                     l877:
  1478   0009E0  0406               	decf	_bit_mode^0,w,c
  1479   0009E2  1007               	iorwf	(_bit_mode+1)^0,w,c
  1480   0009E4  A4D8               	btfss	status,2,c
  1481   0009E6  EFF7  F004         	goto	u111
  1482   0009EA  EFF9  F004         	goto	u110
  1483   0009EE                     u111:
  1484   0009EE  EFFB  F004         	goto	l44
  1485   0009F2                     u110:
  1486   0009F2                     
  1487                           ;clcd.c: 16:         PORTD = byte;
  1488   0009F2  C003  FF83         	movff	clcd_write@byte,3971	;volatile
  1489   0009F6                     l44:
  1490                           
  1491                           ;clcd.c: 18:     PORTEbits.RE1 = 1;
  1492   0009F6  8284               	bsf	132,1,c	;volatile
  1493   0009F8                     
  1494                           ;clcd.c: 19:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1495   0009F8  0EA6               	movlw	166
  1496   0009FA                     u287:
  1497   0009FA  2EE8               	decfsz	wreg,f,c
  1498   0009FC  D7FE               	bra	u287
  1499   0009FE  D000               	nop2	
  1500   000A00                     
  1501                           ;clcd.c: 20:     PORTEbits.RE1 = 0;
  1502   000A00  9284               	bcf	132,1,c	;volatile
  1503                           
  1504                           ;clcd.c: 22:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1505   000A02  0E1B               	movlw	27
  1506   000A04  6E02               	movwf	??_clcd_write^0,c
  1507   000A06  0E9E               	movlw	158
  1508   000A08                     u297:
  1509   000A08  2EE8               	decfsz	wreg,f,c
  1510   000A0A  D7FE               	bra	u297
  1511   000A0C  2E02               	decfsz	??_clcd_write^0,f,c
  1512   000A0E  D7FC               	bra	u297
  1513   000A10  D000               	nop2	
  1514   000A12  0012               	return		;funcret
  1515   000A14                     __end_of_clcd_write:
  1516                           	callstack 0
  1517                           
  1518                           	psect	rparam
  1519   000001                     ___rparam_used  equ	1
  1520   000000                     ___param_bank   equ	0
  1521   000000                     __Lparam        equ	__Lrparam
  1522   000000                     __Hparam        equ	__Hrparam
  1523                           
  1524                           	psect	config
  1525                           
  1526                           ;Config register CONFIG1L @ 0x300000
  1527                           ;	PLL Prescaler Selection bits
  1528                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
  1529                           ;	System Clock Postscaler Selection bits
  1530                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1531                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1532                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
  1533   300000                     	org	3145728
  1534   300000  21                 	db	33
  1535                           
  1536                           ;Config register CONFIG1H @ 0x300001
  1537                           ;	Oscillator Selection bits
  1538                           ;	FOSC = HS, HS oscillator (HS)
  1539                           ;	Fail-Safe Clock Monitor Enable bit
  1540                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1541                           ;	Internal/External Oscillator Switchover bit
  1542                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1543   300001                     	org	3145729
  1544   300001  0C                 	db	12
  1545                           
  1546                           ;Config register CONFIG2L @ 0x300002
  1547                           ;	Power-up Timer Enable bit
  1548                           ;	PWRT = ON, PWRT enabled
  1549                           ;	Brown-out Reset Enable bits
  1550                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1551                           ;	Brown-out Reset Voltage bits
  1552                           ;	BORV = 3, Minimum setting 2.05V
  1553                           ;	USB Voltage Regulator Enable bit
  1554                           ;	VREGEN = OFF, USB voltage regulator disabled
  1555   300002                     	org	3145730
  1556   300002  18                 	db	24
  1557                           
  1558                           ;Config register CONFIG2H @ 0x300003
  1559                           ;	Watchdog Timer Enable bit
  1560                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1561                           ;	Watchdog Timer Postscale Select bits
  1562                           ;	WDTPS = 32768, 1:32768
  1563   300003                     	org	3145731
  1564   300003  1E                 	db	30
  1565                           
  1566                           ; Padding undefined space
  1567   300004                     	org	3145732
  1568   300004  FF                 	db	255
  1569                           
  1570                           ;Config register CONFIG3H @ 0x300005
  1571                           ;	CCP2 MUX bit
  1572                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1573                           ;	PORTB A/D Enable bit
  1574                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1575                           ;	Low-Power Timer 1 Oscillator Enable bit
  1576                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1577                           ;	MCLR Pin Enable bit
  1578                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1579   300005                     	org	3145733
  1580   300005  81                 	db	129
  1581                           
  1582                           ;Config register CONFIG4L @ 0x300006
  1583                           ;	Stack Full/Underflow Reset Enable bit
  1584                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  1585                           ;	Single-Supply ICSP Enable bit
  1586                           ;	LVP = OFF, Single-Supply ICSP disabled
  1587                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1588                           ;	ICPRT = OFF, ICPORT disabled
  1589                           ;	Extended Instruction Set Enable bit
  1590                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1591                           ;	Background Debugger Enable bit
  1592                           ;	DEBUG = 0x1, unprogrammed default
  1593   300006                     	org	3145734
  1594   300006  80                 	db	128
  1595                           
  1596                           ; Padding undefined space
  1597   300007                     	org	3145735
  1598   300007  FF                 	db	255
  1599                           
  1600                           ;Config register CONFIG5L @ 0x300008
  1601                           ;	Code Protection bit
  1602                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1603                           ;	Code Protection bit
  1604                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1605                           ;	Code Protection bit
  1606                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1607                           ;	Code Protection bit
  1608                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1609   300008                     	org	3145736
  1610   300008  0F                 	db	15
  1611                           
  1612                           ;Config register CONFIG5H @ 0x300009
  1613                           ;	Boot Block Code Protection bit
  1614                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1615                           ;	Data EEPROM Code Protection bit
  1616                           ;	CPD = OFF, Data EEPROM is not code-protected
  1617   300009                     	org	3145737
  1618   300009  C0                 	db	192
  1619                           
  1620                           ;Config register CONFIG6L @ 0x30000A
  1621                           ;	Write Protection bit
  1622                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1623                           ;	Write Protection bit
  1624                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1625                           ;	Write Protection bit
  1626                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1627                           ;	Write Protection bit
  1628                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1629   30000A                     	org	3145738
  1630   30000A  0F                 	db	15
  1631                           
  1632                           ;Config register CONFIG6H @ 0x30000B
  1633                           ;	Configuration Register Write Protection bit
  1634                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1635                           ;	Boot Block Write Protection bit
  1636                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1637                           ;	Data EEPROM Write Protection bit
  1638                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1639   30000B                     	org	3145739
  1640   30000B  E0                 	db	224
  1641                           
  1642                           ;Config register CONFIG7L @ 0x30000C
  1643                           ;	Table Read Protection bit
  1644                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1645                           ;	Table Read Protection bit
  1646                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1647                           ;	Table Read Protection bit
  1648                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1649                           ;	Table Read Protection bit
  1650                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1651   30000C                     	org	3145740
  1652   30000C  0F                 	db	15
  1653                           
  1654                           ;Config register CONFIG7H @ 0x30000D
  1655                           ;	Boot Block Table Read Protection bit
  1656                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1657   30000D                     	org	3145741
  1658   30000D  40                 	db	64
  1659                           tosu	equ	0xFFF
  1660                           tosh	equ	0xFFE
  1661                           tosl	equ	0xFFD
  1662                           stkptr	equ	0xFFC
  1663                           pclatu	equ	0xFFB
  1664                           pclath	equ	0xFFA
  1665                           pcl	equ	0xFF9
  1666                           tblptru	equ	0xFF8
  1667                           tblptrh	equ	0xFF7
  1668                           tblptrl	equ	0xFF6
  1669                           tablat	equ	0xFF5
  1670                           prodh	equ	0xFF4
  1671                           prodl	equ	0xFF3
  1672                           indf0	equ	0xFEF
  1673                           postinc0	equ	0xFEE
  1674                           postdec0	equ	0xFED
  1675                           preinc0	equ	0xFEC
  1676                           plusw0	equ	0xFEB
  1677                           fsr0h	equ	0xFEA
  1678                           fsr0l	equ	0xFE9
  1679                           wreg	equ	0xFE8
  1680                           indf1	equ	0xFE7
  1681                           postinc1	equ	0xFE6
  1682                           postdec1	equ	0xFE5
  1683                           preinc1	equ	0xFE4
  1684                           plusw1	equ	0xFE3
  1685                           fsr1h	equ	0xFE2
  1686                           fsr1l	equ	0xFE1
  1687                           bsr	equ	0xFE0
  1688                           indf2	equ	0xFDF
  1689                           postinc2	equ	0xFDE
  1690                           postdec2	equ	0xFDD
  1691                           preinc2	equ	0xFDC
  1692                           plusw2	equ	0xFDB
  1693                           fsr2h	equ	0xFDA
  1694                           fsr2l	equ	0xFD9
  1695                           status	equ	0xFD8

Data Sizes:
    Strings     29
    Constant    0
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5       7
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), STR_2(CODE[7]), STR_3(CODE[11]), STR_4(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_clcd_print
    _display_controller->_init_display_controller
    _init_display_controller->_clcd_write
    _clcd_4_bit_mode->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     447
                         _clcd_print
                 _display_controller
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                          _init_clcd
                        _init_switch
 ---------------------------------------------------------------------------------
 (2) _init_switch                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_controller                                   0     0      0     246
            _init_display_controller
 ---------------------------------------------------------------------------------
 (2) _init_display_controller                              1     1      0     246
                                              3 COMRAM     1     1      0
                    _clcd_4_bit_mode
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_4_bit_mode                                      0     0      0     123
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_print                                           2     0      2     198
                                              3 COMRAM     2     0      2
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           3     2      1     123
                                              0 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _display_controller
     _init_display_controller
       _clcd_4_bit_mode
         _clcd_write
       _clcd_write
   _init_config
     _init_clcd
     _init_switch

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITBIGSFRh         126      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95      5       7      7.4%
BITBIGSFRl          33      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       7      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Nov 12 21:43:44 2024

                 clcd_print@addr 0005                               l21 0964                               l15 0A90  
                             l44 09F6                               l52 0920                               l46 0A12  
                             l70 0AA8                               l55 0A86                               l58 0AA2  
                             l67 0A4C                               l77 0A9A                               u95 09A8  
                             u96 09AA                              l901 0878                              l821 0A88  
                            l911 08B2                              l903 087E                              l921 08EE  
                            l913 08CC                              l905 0886                              l931 0A22  
                            l923 0900                              l915 08D4                              l907 0898  
                            l933 0A32                              l925 090E                              l917 08DE  
                            l909 08A8                              l781 0A92                              l941 0926  
                            l871 09C4                              l863 09A0                              l935 0A34  
                            l919 08E4                              l927 0AA4                              l951 0958  
                            l943 0934                              l881 09F8                              l873 09CC  
                            l865 09AA                              l929 0A14                              l961 098A  
                            l953 0960                              l945 093C                              l937 0922  
                            l883 0A00                              l875 09CE                              l867 09BC  
                            l891 0832                              l779 0A9C                              l955 0972  
                            l947 0940                              l939 0926                              l869 09C2  
                            l877 09E0                              l885 0A74                              l893 0842  
                            l957 097A                              l949 094C                              l879 09F2  
                            l887 0A7E                              l895 084C                              l959 097E  
                            l897 0866                              l889 0820                              l899 086E  
                            u100 09BC                              u101 09B8                              u110 09F2  
                            u111 09EE                              u120 0832                              u121 082E  
                            u130 0898                              u131 0894                              u140 0A4C  
                            u141 0A48                              u150 0934                              u207 089E  
                            u151 0930                              u160 0972                              u217 08B8  
                            u161 096E                              u227 08CE                              u237 08F0  
                            u247 0906                              u257 091A                              u177 0838  
                            u267 0A80                              u187 0852                              u277 09C6  
                            u197 0868                              u287 09FA                              u297 0A08  
                            wreg 0FE8                             STR_1 080C                             STR_2 0817  
                           STR_3 0801                             STR_4 0817                             _main 0922  
                           start 0000                     ___param_bank 0000                   clcd_write@byte 0003  
                 clcd_write@mode 0001                            ?_main 0001                     ?_init_config 0001  
                          _PORTD 0F83                            _TRISD 0F95                     ?_init_switch 0001  
                          tablat 0FF5       __end_of_display_controller 0AAA                            status 0FD8  
               ?_clcd_4_bit_mode 0001                  __initialization 0A4E                     __end_of_main 099E  
                         ??_main 0006                    __activetblptr 0001          _init_display_controller 0820  
                         isa$std 0001                     __pdataCOMRAM 0006                     __mediumconst 0000  
                         tblptrh 0FF7                           tblptrl 0FF6                           tblptru 0FF8  
                     __accesstop 0060          __end_of__initialization 0A66                    ___rparam_used 0001  
                 __pcstackCOMRAM 0001        ??_init_display_controller 0004                       _clcd_print 0A14  
                     _clcd_write 099E                          __Hparam 0000                          __Lparam 0000  
                   __psmallconst 0800               _display_controller 0AA4                          __pcinit 0A4E  
                        __ramtop 0800                          __ptext0 0922                          __ptext1 0A88  
                        __ptext2 0A92                          __ptext3 0A9C                          __ptext4 0AA4  
                        __ptext5 0820                          __ptext6 0A74                          __ptext7 0A14  
                        __ptext8 099E  __end_of_init_display_controller 0922                __end_of_init_clcd 0AA4  
            ?_display_controller 0001             end_of_initialization 0A66             ??_display_controller 0005  
                    ?_clcd_print 0004                      ?_clcd_write 0001                        _PORTBbits 0F81  
                      _PORTEbits 0F84                        _TRISBbits 0F93                        _TRISEbits 0F96  
                  clcd_print@str 0004                    __pidataCOMRAM 0AAA              start_initialization 0A4E  
                  ??_init_config 0001                ??_clcd_4_bit_mode 0004                    ??_init_switch 0001  
                    __smallconst 0800                        _init_clcd 0A9C              __end_of_init_config 0A92  
       ?_init_display_controller 0001              __end_of_init_switch 0A9C                     ??_clcd_print 0006  
                   ??_clcd_write 0002               __end_of_clcd_print 0A4E               __end_of_clcd_write 0A14  
                     ?_init_clcd 0001                         __Hrparam 0000                         __Lrparam 0000  
                   __Lsmallconst 0800                      _init_config 0A88                         _bit_mode 0006  
                    _init_switch 0A92                         isa$xinst 0000                  _clcd_4_bit_mode 0A74  
                    ??_init_clcd 0001          __end_of_clcd_4_bit_mode 0A88  
